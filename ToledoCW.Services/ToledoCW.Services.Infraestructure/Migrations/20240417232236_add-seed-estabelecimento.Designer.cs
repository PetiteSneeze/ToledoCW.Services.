// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToledoCW.Services.Infraestructure;

#nullable disable

namespace ToledoCW.Services.Infraestructure.Migrations
{
    [DbContext(typeof(ToledoCWContext))]
    [Migration("20240417232236_add-seed-estabelecimento")]
    partial class addseedestabelecimento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ToledoCW.Services.Infraestructure.Entidades.Atendente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("Estabelecimento")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Estabelecimento");

                    b.ToTable("atendente", (string)null);
                });

            modelBuilder.Entity("ToledoCW.Services.Infraestructure.Entidades.Estabelecimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("estabelecimento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nome = "Estabelecimento 1"
                        },
                        new
                        {
                            Id = 2L,
                            Nome = "estabelecimento 2"
                        });
                });

            modelBuilder.Entity("ToledoCW.Services.Infraestructure.Entidades.Atendente", b =>
                {
                    b.HasOne("ToledoCW.Services.Infraestructure.Entidades.Estabelecimento", "EstabelecimentoObj")
                        .WithMany()
                        .HasForeignKey("Estabelecimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstabelecimentoObj");
                });
#pragma warning restore 612, 618
        }
    }
}
